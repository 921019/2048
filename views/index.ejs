<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>儿灵思把</title>
		<link rel="stylesheet" href="dist/css/bootstrap.css" />

		<script src="js/jquery-1.11.2.min.js" type="text/javascript" charset="utf-8"></script>
		<script src="dist/js/bootstrap.js" type="text/javascript" charset="utf-8"></script>
	</head>

	<style type="text/css">
		body{
			margin: 0;
			padding: 0;
			text-align: center;
		}
		.Canvas{
			border: 1px solid #eee;
		}
		.cz{
			
		}
	</style>

	<body>
		<canvas id="myCanvas" width="400" height="400" class="Canvas"></canvas>

		<div class="cz">
			<input type="button" class="btn" name="up" id="up" value="上" />
			<input type="button" class="btn" name="down" id="down" value="下" />
			<input type="button" class="btn" name="left" id="left" value="左" />
			<input type="button" class="btn" name="right" id="right" value="右" />
		</div>
	</body>

</html>

<script type="text/javascript">

	var width  = 400
	var height = 400
	var mapdata =[[0,0,0,0],  
    			  [0,0,0,0],  
        		  [0,0,0,0],  
        		  [0,0,0,0]];
    
    var g = {
    	status : 1,
    	over :0
    }
	var canvas=document.getElementById("myCanvas");
	var w = width / 4 - 2; //容器宽度
	var h = height / 4 - 2; //容器高度


	var drowText = function() {
		console.log(2)
	}
	
	
	//随机数
	var fRandomBy = function(under, over) {
		switch (arguments.length) {
			case 1:
				return parseInt(Math.random() * under + 1);
			case 2:
				return parseInt(Math.random() * (over - under + 1) + under);
			default:
				return 0;
		}
	}
	
	/**
	 * 创建容器
	 * @param {Object} x 容器偏移量
	 * @param {Object} y 容器偏移量
	 * @param {Object} xx终点x
	 * @param {Object} yy终点y
	 * @param {string} nr容器中显示的文字
	 */
	
	function mkroom(x,y,xx,yy,nr) { 
//		console.log("起点："+x+",起点："+y+",横坐标："+xx+",纵坐标："+yy)
		var ctx=canvas.getContext("2d");
		ctx.beginPath(); 
		ctx.lineWidth = "3"; 
		ctx.strokeStyle = "white"; 
		ctx.fillStyle = "#F0AD4E"; 
		
		ctx.moveTo(x, y); 
		ctx.lineTo(x, yy); 
		ctx.lineTo(xx, yy); 
		ctx.lineTo(xx,y);
		ctx.closePath(); 
		ctx.fill(); 
		ctx.stroke(); 
		
		var pr = 8;
		var lg = nr.toString().length;
		if(lg>1){
			pr = lg*6 + 5
		}
		
		if(nr != 0){
			ctx.font = "20pt Arial"; 
			ctx.strokeText(nr, xx-w/2-pr, yy-h/2+8); 
			ctx.stroke();
		}
	}
	
	
					
	/**
	 * 重置画布效果
	 * @param {Object} data 新的数据
	 * @param {Object} rd   随机生成的数量
	 */
	var drowWg =  function(data,rd){
		
		
		if(rd){
			var data = getRand(data,2);
		}else{
			var data = getRand(data,1);
		}
		var line = data.length;
		for(var i = 0; i < line; i++){
			var col = data.length;
			var x = i * w + i * 2 + 1;//容器宽度
			var xx = x + w - 1;
			for(var j = 0; j < col; j++){
				var y = j * h + j * 2 + 1;//容器高度
				var yy = y + h - 1;
				var	nr = data[i][j]; 
				mkroom(x,y,xx,yy,nr)
//				console.log("起点："+x+",起点："+y+",横坐标："+xx+",纵坐标："+yy)
			}
		}
		//随机的两个位置
		mapdata = data
		
		//检测游戏状态
		game(mapdata)
	}
	
	var game = function(data){
		
		var line = data.length;
		var status = true;
		Fors:
		for(var i = 0; i < line; i++){
			var col = data.length;
			for(var j = 0; j < col; j++){
				//继续
				if(data[i][j] == 2048){
					g.status = 0
					break Fors;
				}
				if(data[i][j] == 0){
					status = false;
				}
				if(i < line-1 && data[i][j] == data[(i+1)][j]){
					status = false;
				}
				
				if(j < col-1 && data[i][j] == data[i][(j+1)]){
					status = false;
				}
			}
		}
		
		if(status == true){
			g.over = 1;
		}
		
	}
	
	
	/**
	 * 生成两个随机数组
	 */
	
	  var getRand = function(data,cz) {
	      var arr = [];
	      for(var s = 0;s<cz;s++){
	      	  for(var i=0; i<data.length; i++ ) {
		        for(var j=0; j< data[i].length; j++ ) {
		          if( data[i][j] == 0) {
		            arr.push({x:j, y:i});
		          };
		        };
		      };
		      if(arr!=""){
		      	var res = arr[ Math.floor( Math.random() * arr.length )];
		      	data[res.y][res.x] = 2
		      	mapdata = data;
		      }
	      }
   	      return mapdata;
   };
   
	var vertical = function(data,i,k,j){
        for(var k = k;k<j; k++) {
          if(data[i][k] !== 0)
          return false;
        };
        return true;
	}
	
	var horizontal = function(data,i,k,j){
        for(var k = k;k<j; k++) {
          if(data[k][i] !== 0)
          return false;
        };
        return true;
	}
    
	/**
	 * 重写数组偏移量并且渲染画布
	 */
	var newarray = function(data,type){
		var line = data.length;
		//上
		if(type == 'up'){
			for(var i = 0; i<line; i++){
				var col = data[i].length;
				for(var j = 0; j < col; j++){
					if(data[i][j] !=0 ){
						for(var k = 0; k < j; k++){
							if(data[i][k] == 0 && vertical(data,i,k+1,j)){
								data[i][k] =  data[i][j]; 
							    data[i][j] =  0	
							    break
							}else if(data[i][k] != 0 && data[i][k] == data[i][j]){
								data[i][k] +=  data[i][j];
								data[i][j] = 0
								break
							}
						}
					}
				}
			}
			
		//下
		}else if(type == 'down'){
			for(var i = 0; i<line; i++){
				var col = data[i].length;
				for(var j = col-1; j >= 0; j--){
					if(data[i][j] !=0 ){
						for(var k = col-1; k > j; k--){
							if(data[i][k] == 0 && vertical(data,i,k-1,j)){
								data[i][k] =  data[i][j]; 
							    data[i][j] =  0	
							    break
							}else if(data[i][k] != 0 && data[i][k] == data[i][j]){
								data[i][k] +=  data[i][j];
								data[i][j] = 0
								break
							}
						}
					}
				}
			}
		//左
		}else if(type == 'left'){
			for(var i = 0; i<line; i++){
				var col = data[i].length;
				for(var j = 0; j < col; j++){
					if(data[j][i] !=0 ){
						for(var k = 0; k < j; k++){
							if(data[k][i] == 0 && horizontal(data,i,k+1,j)){
								data[k][i] =  data[j][i]; 
							    data[j][i] =  0	
							    break
							}else if(data[k][i] != 0 && data[k][i] == data[j][i]){
								data[k][i] +=  data[j][i];
								data[j][i] = 0
								break
							}
						}
					}
				}
			}
		//右
		}else{
			for(var i = 0; i<line; i++){
				var col = data[i].length;
				for(var j = col-1; j >= 0; j--){
					if(data[j][i] !=0 ){
						for(var k = col-1; k > j; k--){
							if(data[k][i] == 0 && horizontal(data,i,k-1,j)){
								data[k][i] =  data[j][i]; 
							    data[j][i] =  0	
							    break
							}else if(data[k][i] != 0 && data[k][i] == data[j][i]){
								data[k][i] +=  data[j][i];
								data[j][i] = 0
								break
							}
						}
					}
				}
			}
		}
		mapdata = data
		return data;
			
	}
	drowWg(mapdata,true);
	$(function(){
		$('.btn').on('click',function(){
			
			if(g.status == 0){
				if(confirm("你已经赢了是否再来一盘？")){
					location.reload()
				}
				return;
			}
			
			if(g.over == 1){
				alert("loser")
				return;
			}	
			
			var type = $(this).attr('name');
			var newdata = newarray(mapdata,type);
			console.log(mapdata);
			console.log(newdata);
			drowWg(newdata);
		})
	})
	
    document.onkeydown=function(event){
        var e = event || window.event || arguments.callee.caller.arguments[0];
        //上
        if(e && e.keyCode==87){ 
        	type = 'up'
        }else if(e && e.keyCode==83){ 
        	type = 'down'
        }else if(e && e.keyCode==65){ 
        	type = 'left'
        	
        }else if(e && e.keyCode==68){ 
        	type = 'right'
        }else{
        	return;
        }
        
       if(g.status == 0){
			if(confirm("你已经赢了是否再来一盘？")){
				location.reload()
			}
			return;
		}
		
		if(g.over == 1){
			alert("loser")
			return;
		}	
		
        var newdata = newarray(mapdata,type);
		drowWg(newdata);
    }; 
</script>